//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _64Inject {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class HelpString {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HelpString() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("_64Inject.HelpString", typeof(HelpString).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base.
        /// </summary>
        internal static string Base {
            get {
                return ResourceManager.GetString("Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base checked.
        /// </summary>
        internal static string Base_Checked {
            get {
                return ResourceManager.GetString("Base Checked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The base was loaded correctly..
        /// </summary>
        internal static string Base_Checked_Description {
            get {
                return ResourceManager.GetString("Base Checked Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base Game Currently Loaded..
        /// </summary>
        internal static string Base_Description {
            get {
                return ResourceManager.GetString("Base Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base error.
        /// </summary>
        internal static string Base_Error {
            get {
                return ResourceManager.GetString("Base Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The base did not load. Use one of the N64 games released for the Wii U VC. (F-Zero X (USA) is recommended, you can get it via USBHelper or similar)..
        /// </summary>
        internal static string Base_Error_Description {
            get {
                return ResourceManager.GetString("Base Error Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The base is invalid..
        /// </summary>
        internal static string Base_Invalid {
            get {
                return ResourceManager.GetString("Base Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the game folder of the Wii U N64 VC that you want to use as base..
        /// </summary>
        internal static string Base_Select {
            get {
                return ResourceManager.GetString("Base Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose config file.
        /// </summary>
        internal static string Choose_Config_File {
            get {
                return ResourceManager.GetString("Choose Config File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the &quot;.ini&quot; file that contains configuration data for the game you want to inject..
        /// </summary>
        internal static string Choose_Config_File_Description {
            get {
                return ResourceManager.GetString("Choose Config File Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose config files collection.
        /// </summary>
        internal static string Choose_Config_Files_Collection {
            get {
                return ResourceManager.GetString("Choose Config Files Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the folder that contains your collection of &quot;.ini&quot; configuration files..
        /// </summary>
        internal static string Choose_Config_Files_Collection_Description {
            get {
                return ResourceManager.GetString("Choose Config Files Collection Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose image collection.
        /// </summary>
        internal static string Choose_Image_Collection {
            get {
                return ResourceManager.GetString("Choose Image Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the folder that contains your image collection..
        /// </summary>
        internal static string Choose_Image_Collection_Description {
            get {
                return ResourceManager.GetString("Choose Image Collection Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose ROM.
        /// </summary>
        internal static string Choose_ROM {
            get {
                return ResourceManager.GetString("Choose ROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Choose ROM collection.
        /// </summary>
        internal static string Choose_ROM_Collection {
            get {
                return ResourceManager.GetString("Choose ROM Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the folder that contains your ROM collection..
        /// </summary>
        internal static string Choose_ROM_Collection_Description {
            get {
                return ResourceManager.GetString("Choose ROM Collection Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the ROM file of the game you want to inject..
        /// </summary>
        internal static string Choose_ROM_Description {
            get {
                return ResourceManager.GetString("Choose ROM Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Config file.
        /// </summary>
        internal static string Config_File {
            get {
                return ResourceManager.GetString("Config File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a &quot;.Ini&quot; file that contains configuration data for the game you want to inject. Not all games have their corresponding configuration file. You can try leaving it empty..
        /// </summary>
        internal static string Config_File_Description {
            get {
                return ResourceManager.GetString("Config File Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The config file is invalid. An empty file will be injected..
        /// </summary>
        internal static string Config_File_Invalid {
            get {
                return ResourceManager.GetString("Config File Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Config files collection.
        /// </summary>
        internal static string Config_Files_Collection {
            get {
                return ResourceManager.GetString("Config Files Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the use of the folder that contains your collection of &quot;.ini&quot; configuration files..
        /// </summary>
        internal static string Config_Files_Collection_Description {
            get {
                return ResourceManager.GetString("Config Files Collection Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Config files collection path.
        /// </summary>
        internal static string Config_Files_Collection_Path {
            get {
                return ResourceManager.GetString("Config Files Collection Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Folder that contains your collection of &quot;.ini&quot; configuration files..
        /// </summary>
        internal static string Config_Files_Collection_Path_Description {
            get {
                return ResourceManager.GetString("Config Files Collection Path Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Dark filter.
        /// </summary>
        internal static string Dark_Filter {
            get {
                return ResourceManager.GetString("Dark Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the dark filter in the game display..
        /// </summary>
        internal static string Dark_Filter_Description {
            get {
                return ResourceManager.GetString("Dark Filter Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a To enable the buttons in the Packing section you have to choose a ROM, put a name and load a base..
        /// </summary>
        internal static string Enable_Packing {
            get {
                return ResourceManager.GetString("Enable Packing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The.
        /// </summary>
        internal static string Folder_Exists_1 {
            get {
                return ResourceManager.GetString("Folder Exists 1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a folder exists and is not empty..
        /// </summary>
        internal static string Folder_Exists_2 {
            get {
                return ResourceManager.GetString("Folder Exists 2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select the folder where the injection result will be saved..
        /// </summary>
        internal static string Folder_Result_Select {
            get {
                return ResourceManager.GetString("Folder Result Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The long name of the game is empty..
        /// </summary>
        internal static string Game_Long_Name_Empty {
            get {
                return ResourceManager.GetString("Game Long Name Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The name of the game is empty..
        /// </summary>
        internal static string Game_Name_Empty {
            get {
                return ResourceManager.GetString("Game Name Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a GamePad.
        /// </summary>
        internal static string GamePad {
            get {
                return ResourceManager.GetString("GamePad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Change the image that will appear on the GamePad when the game starts..
        /// </summary>
        internal static string GamePad_Description {
            get {
                return ResourceManager.GetString("GamePad Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a GamePad preview.
        /// </summary>
        internal static string GamePad_Preview {
            get {
                return ResourceManager.GetString("GamePad Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Preview the image that will appear in the GamePad when the game starts..
        /// </summary>
        internal static string GamePad_Preview_Description {
            get {
                return ResourceManager.GetString("GamePad Preview Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Help.
        /// </summary>
        internal static string Help_Box {
            get {
                return ResourceManager.GetString("Help Box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable this help box..
        /// </summary>
        internal static string Help_Description {
            get {
                return ResourceManager.GetString("Help Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Icon.
        /// </summary>
        internal static string Icon {
            get {
                return ResourceManager.GetString("Icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Change the icon that will appear in the console menu..
        /// </summary>
        internal static string Icon_Description {
            get {
                return ResourceManager.GetString("Icon Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Icon preview.
        /// </summary>
        internal static string Icon_Preview {
            get {
                return ResourceManager.GetString("Icon Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Preview the image that will appear in the console menu..
        /// </summary>
        internal static string Icon_Preview_Description {
            get {
                return ResourceManager.GetString("Icon Preview Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Image collection.
        /// </summary>
        internal static string Image_Collection {
            get {
                return ResourceManager.GetString("Image Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the use of the folder that contains your image collection..
        /// </summary>
        internal static string Image_Collection_Description {
            get {
                return ResourceManager.GetString("Image Collection Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Image collection path.
        /// </summary>
        internal static string Image_Collection_Path {
            get {
                return ResourceManager.GetString("Image Collection Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Folder that contains your image collection..
        /// </summary>
        internal static string Image_Collection_Path_Description {
            get {
                return ResourceManager.GetString("Image Collection Path Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The injection failed..
        /// </summary>
        internal static string Injection_Failed {
            get {
                return ResourceManager.GetString("Injection Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The injection was completed successfully!.
        /// </summary>
        internal static string Injection_Successfully {
            get {
                return ResourceManager.GetString("Injection Successfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! If you use this option, you will receive a failed injection. Java is needed for NUSPacker (pack)..
        /// </summary>
        internal static string Injection_Warning_Java {
            get {
                return ResourceManager.GetString("Injection Warning Java", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! If you use this option, you will receive a failed injection. Enter the Wii U common key (see Settings section)..
        /// </summary>
        internal static string Injection_Warning_WiiUCK {
            get {
                return ResourceManager.GetString("Injection Warning WiiUCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! Apparently the system does not have Java installed! Java is needed to NUSPacker (pack) and JNUSTool (unpack)..
        /// </summary>
        internal static string Java_Warning {
            get {
                return ResourceManager.GetString("Java Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! &quot;resources\jnustool\JNUSTool.jar&quot; not found! JNUSTool allows you to unpack Wii U VC games to use as base..
        /// </summary>
        internal static string JNUSTool_Warning {
            get {
                return ResourceManager.GetString("JNUSTool Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Load base.
        /// </summary>
        internal static string Load_Base {
            get {
                return ResourceManager.GetString("Load Base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Change the current base game..
        /// </summary>
        internal static string Load_Base_Description {
            get {
                return ResourceManager.GetString("Load Base Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! You will not be able to load a packed base (WUP format). Java is needed for JNUSTool (unpack)..
        /// </summary>
        internal static string Load_Base_Warning_Java {
            get {
                return ResourceManager.GetString("Load Base Warning Java", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! You will not be able to load a packed base (WUP format). Enter the Wii U common key (see Settings section)..
        /// </summary>
        internal static string Load_Base_Warning_WiiUCK {
            get {
                return ResourceManager.GetString("Load Base Warning WiiUCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Loading....
        /// </summary>
        internal static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Log.
        /// </summary>
        internal static string Log {
            get {
                return ResourceManager.GetString("Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Once an injection is made, it shows the contents of the program log file..
        /// </summary>
        internal static string Log_Description {
            get {
                return ResourceManager.GetString("Log Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Long name.
        /// </summary>
        internal static string Long_Name {
            get {
                return ResourceManager.GetString("Long Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Name of two lines that will appear in the console menu and in the template images (see the Images section)..
        /// </summary>
        internal static string Long_Name_Boxes_Description {
            get {
                return ResourceManager.GetString("Long Name Boxes Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the long name..
        /// </summary>
        internal static string Long_Name_Description {
            get {
                return ResourceManager.GetString("Long Name Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Not pack.
        /// </summary>
        internal static string Not_Pack {
            get {
                return ResourceManager.GetString("Not Pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Perform the injection and copy the result in the path you select. For loadiine..
        /// </summary>
        internal static string Not_Pack_Description {
            get {
                return ResourceManager.GetString("Not Pack Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning! &quot;resources\nuspacker\NUSPacker.jar&quot; not found! NUSPacker allows you to pack the result for WUP Installer..
        /// </summary>
        internal static string NUSPacker_Warning {
            get {
                return ResourceManager.GetString("NUSPacker Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Pack.
        /// </summary>
        internal static string Pack {
            get {
                return ResourceManager.GetString("Pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Perform the injection and pack the result in the path you select. For WUP Installer..
        /// </summary>
        internal static string Pack_Description {
            get {
                return ResourceManager.GetString("Pack Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Packing.
        /// </summary>
        internal static string Packing {
            get {
                return ResourceManager.GetString("Packing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Players.
        /// </summary>
        internal static string Players {
            get {
                return ResourceManager.GetString("Players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Number of game players that will appear in the template images..
        /// </summary>
        internal static string Players_Description {
            get {
                return ResourceManager.GetString("Players Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Product code.
        /// </summary>
        internal static string Product_Code {
            get {
                return ResourceManager.GetString("Product Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Internal value of the ROM file that identifies the game..
        /// </summary>
        internal static string Product_Code_Description {
            get {
                return ResourceManager.GetString("Product Code Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Released.
        /// </summary>
        internal static string Released {
            get {
                return ResourceManager.GetString("Released", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Game release date that will appear in the template images..
        /// </summary>
        internal static string Released_Description {
            get {
                return ResourceManager.GetString("Released Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ROM.
        /// </summary>
        internal static string ROM {
            get {
                return ResourceManager.GetString("ROM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ROM collection.
        /// </summary>
        internal static string ROM_Collection {
            get {
                return ResourceManager.GetString("ROM Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the use of the folder that contains your ROM collection..
        /// </summary>
        internal static string ROM_Collection_Description {
            get {
                return ResourceManager.GetString("ROM Collection Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a ROM collection path.
        /// </summary>
        internal static string ROM_Collection_Path {
            get {
                return ResourceManager.GetString("ROM Collection Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Folder that contains your ROM collection..
        /// </summary>
        internal static string ROM_Collection_Path_Description {
            get {
                return ResourceManager.GetString("ROM Collection Path Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The ROM file of the game you want to inject..
        /// </summary>
        internal static string ROM_Description {
            get {
                return ResourceManager.GetString("ROM Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Short name.
        /// </summary>
        internal static string Short_Name {
            get {
                return ResourceManager.GetString("Short Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a If the long name is not enabled, the short name will be used for all menus in the console and in the template images (see the Images section)..
        /// </summary>
        internal static string Short_Name_Description {
            get {
                return ResourceManager.GetString("Short Name Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show name.
        /// </summary>
        internal static string Show_Name {
            get {
                return ResourceManager.GetString("Show Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the display of the name of the game in the template images..
        /// </summary>
        internal static string Show_Name_Description {
            get {
                return ResourceManager.GetString("Show Name Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Title ID.
        /// </summary>
        internal static string Title_ID {
            get {
                return ResourceManager.GetString("Title ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Value that identifies the game within the console..
        /// </summary>
        internal static string Title_ID_Description {
            get {
                return ResourceManager.GetString("Title ID Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Title screen.
        /// </summary>
        internal static string Title_Screen {
            get {
                return ResourceManager.GetString("Title Screen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Select an image to represent the game in the template images..
        /// </summary>
        internal static string Title_Screen_Description {
            get {
                return ResourceManager.GetString("Title Screen Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a TV.
        /// </summary>
        internal static string TV {
            get {
                return ResourceManager.GetString("TV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Change the image that will appear on the TV when the game starts..
        /// </summary>
        internal static string TV_Description {
            get {
                return ResourceManager.GetString("TV Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a TV preview.
        /// </summary>
        internal static string TV_Preview {
            get {
                return ResourceManager.GetString("TV Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Preview the image that will appear on TV when the game starts..
        /// </summary>
        internal static string TV_Preview_Description {
            get {
                return ResourceManager.GetString("TV Preview Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning!.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Widescreen.
        /// </summary>
        internal static string Widescreen {
            get {
                return ResourceManager.GetString("Widescreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable or disable the wide screen in the game display. This modifies the aspect ratio of the game from 4:3 to 16:9..
        /// </summary>
        internal static string Widescreen_Description {
            get {
                return ResourceManager.GetString("Widescreen Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Wii U common key.
        /// </summary>
        internal static string Wii_U_Common_Key {
            get {
                return ResourceManager.GetString("Wii U Common Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Put the Wii U Common Key here, if the key is correct this text box will disable and a green check mark will appear next to it..
        /// </summary>
        internal static string Wii_U_Common_Key_Box_Description {
            get {
                return ResourceManager.GetString("Wii U Common Key Box Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Wii U common key checked.
        /// </summary>
        internal static string Wii_U_Common_Key_Checked {
            get {
                return ResourceManager.GetString("Wii U Common Key Checked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The common key was loaded correctly..
        /// </summary>
        internal static string Wii_U_Common_Key_Checked_Description {
            get {
                return ResourceManager.GetString("Wii U Common Key Checked Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Common key to pack or unpack Wii U games..
        /// </summary>
        internal static string Wii_U_Common_Key_Description {
            get {
                return ResourceManager.GetString("Wii U Common Key Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Wii U common key error.
        /// </summary>
        internal static string Wii_U_Common_Key_Error {
            get {
                return ResourceManager.GetString("Wii U Common Key Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The common key was not found. Without it you will not be able to decrypt the Wii U games to use as a base or encrypt the result for WUP Installer. (Search it on Google)..
        /// </summary>
        internal static string Wii_U_Common_Key_Error_Description {
            get {
                return ResourceManager.GetString("Wii U Common Key Error Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Zoom.
        /// </summary>
        internal static string Zoom {
            get {
                return ResourceManager.GetString("Zoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enlarge or reduce the viewing area of the game. If you expand it a lot I could crop the image of the game..
        /// </summary>
        internal static string Zoom_Description {
            get {
                return ResourceManager.GetString("Zoom Description", resourceCulture);
            }
        }
    }
}
